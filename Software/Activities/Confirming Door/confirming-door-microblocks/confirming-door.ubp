module main
author unknown
version 1 0 
description ''
variables homeowner 

script 105 52 {
comment 'Use RFID (RC522) Library - SPI Mode

Pico Connections:
RC522 Pico
===== ====
VCC    3v3
GND    GND
MISO   GPIO 16 
MOSI   GPIO 19
SCK     GPIO 18
SDA     GPIO 17 (this is SPI ssPin)
RST     do not connect'
}

script 106 227 {
whenStarted
rc522_initialize_SPI 17
homeowner = ('[data:makeList]' '' '' '' '')
setServoAngle 22 90
forever {
  if (rc522_card_present) {
    pb_beep 100
    if (('[data:joinStrings]' homeowner) == ('[data:joinStrings]' (rc522_read_uid))) {
      sayIt 'Login Confirmed'
      pb_set_rgb_color (colorSwatch 35 190 30 255)
      setServoAngle 22 0
      waitMillis 3000
      setServoAngle 22 90
    } else {
      sayIt 'invalid user'
      pb_set_rgb_color (colorSwatch 190 40 8 255)
      waitMillis 3000
    }
  } else {
    sayIt 'No Card Detected'
    pb_turn_off_RGB
  }
  waitMillis 100
}
}

script 468 230 {
comment 'Click on Code to test and obtain the RFID code from your card.
Update the other script''s homeowner variable with your UUID.
Then just run the program for normal operation with your project.'
rc522_initialize_SPI 17
forever {
  if (rc522_connected) {
    if (rc522_card_present) {
      sayIt 'Card Reader detected' ('[data:unicodeString]' 10) 'Card detected' ('[data:unicodeString]' 10) 'UUID:' ('[data:joinStrings]' (rc522_read_uid) ',')
    } else {
      sayIt 'Card Reader detected' ('[data:unicodeString]' 10) 'No Card detected'
      waitMillis 1000
    }
  } else {
    sayIt 'NO Card Reader detected'
    waitMillis 1000
  }
}
}


module PicoBricks
author MicroBlocks
version 2 3 
depends 'Temperature Humidity (DHT11, DHT22)' 
description 'Robotistan PicoBricks Library

This library controls these Pico Bricks components:
- Red LED
- RGB LED
- DC Motors
- Piezo speaker
- Relay Switch (5V-250V, 5A)
- Button
- Potentiometer (variable resistor)
- Light sensor (light dependent resistor)
- Temperature and humidity sensor (DHT11)
- switched to renamed DHT library

Use separate libraries to control:
- Servo motors
- Graphic display (OLED)
- WIFI/Bluetooth expansion board

See https://www.robotistan.com, 
https://wiki.microblocks.fun/boards/pico
'
variables _pb_initialized _pb_pin_RedLED _pb_pin_Button _pb_pin_DHT _pb_pin_Relay _pb_pin_Pot _pb_pin_LDR _pb_pin_Buzzer _pb_pin_Motor1 _pb_pin_Motor2 _pb_pin_RGB_LED _pb_pin_TX _pb_pin_RX _pb_i2c_Addr 

  spec ' ' 'pb_beep' 'PicoBricks beep _ ms' 'auto' 500
  spec 'r' 'pb_button' 'PicoBricks button'
  spec 'r' 'pb_humidity' 'PicoBricks humidity'
  spec 'r' 'pb_light_sensor' 'PicoBricks light sensor (0-100) %'
  spec 'r' 'pb_potentiometer' 'PicoBricks potentiometer'
  spec 'r' 'pb_random_color' 'PicoBricks random color'
  spec 'r' 'pb_rgb_color' 'PicoBricks color r _ g _ b _ (0-255)' 'auto auto auto' 0 0 0
  spec ' ' 'pb_set_motor_speed' 'PicoBricks set motor _ speed _ (0-100)' 'auto num' 1 100
  spec ' ' 'pb_set_red_LED' 'PicoBricks set red LED _' 'bool' true
  spec ' ' 'pb_set_relay' 'PicoBricks set relay _' 'bool' true
  spec ' ' 'pb_set_rgb_color' 'PicoBricks set RGB LED color _' 'color'
  spec 'r' 'pb_temperature' 'PicoBricks temperature (°C)'
  spec ' ' 'pb_turn_off_RGB' 'PicoBricks turn off RGB LED'
  spec ' ' '_pb_init_pins' '_pb_init_pins'

to '_pb_init_pins' {
  if _pb_initialized {return}
  _pb_pin_RGB_LED = 6
  _pb_pin_RedLED = 7
  _pb_pin_Button = 10
  _pb_pin_DHT = 11
  _pb_pin_Relay = 12
  _pb_pin_Buzzer = 20
  _pb_pin_Motor1 = 21
  _pb_pin_Motor2 = 22
  _pb_pin_Pot = 26
  _pb_pin_LDR = 27
  _pb_pin_TX = 0
  _pb_pin_RX = 1
  _pb_i2c_Addr = '3C'
  _pb_initialized = (booleanConstant true)
}

to pb_beep duration {
  '_pb_init_pins'
  local 'end time' ((millisOp) + duration)
  repeatUntil ((millisOp) >= (v 'end time')) {
    digitalWriteOp _pb_pin_Buzzer true
    waitMicros 1900
    digitalWriteOp _pb_pin_Buzzer false
    waitMicros 1900
  }
}

to pb_button {
  '_pb_init_pins'
  return (digitalReadOp _pb_pin_Button)
}

to pb_humidity {
  '_pb_init_pins'
  return (humidity_DHT11 _pb_pin_DHT)
}

to pb_light_sensor {
  comment 'Returns Light Values s a percentage:
0: dark,  100: light'
  '_pb_init_pins'
  return ('[misc:rescale]' (1023 - (analogReadOp _pb_pin_LDR)) 0 1023 0 100)
}

to pb_potentiometer {
  '_pb_init_pins'
  return (analogReadOp _pb_pin_Pot)
}

to pb_random_color {
  local 'n1' (random 100 200)
  local 'n2' (random 0 100)
  if (1 == (random 1 3)) {
    return ((n1 << 16) | (n2 << 8))
  } (1 == (random 1 2)) {
    return ((n2 << 16) | n1)
  } else {
    return ((n1 << 8) | n2)
  }
}

to pb_rgb_color r g b {
  r = (maximum 0 (minimum r 255))
  g = (maximum 0 (minimum g 255))
  b = (maximum 0 (minimum b 255))
  return (((r << 16) | (g << 8)) | b)
}

to pb_set_motor_speed which speed {
  '_pb_init_pins'
  speed = (maximum 0 (minimum speed 100))
  if (which == 1) {
    analogWriteOp _pb_pin_Motor1 ((1023 * speed) / 100)
  } (which == 2) {
    analogWriteOp _pb_pin_Motor2 ((1023 * speed) / 100)
  }
}

to pb_set_red_LED aBoolean {
  '_pb_init_pins'
  digitalWriteOp _pb_pin_RedLED aBoolean
}

to pb_set_relay aBoolean {
  '_pb_init_pins'
  digitalWriteOp _pb_pin_Relay aBoolean
}

to pb_set_rgb_color color {
  '_pb_init_pins'
  '[display:neoPixelSetPin]' _pb_pin_RGB_LED false
  '[display:neoPixelSend]' color
}

to pb_temperature {
  '_pb_init_pins'
  return (temperature_DHT11 _pb_pin_DHT)
}

to pb_turn_off_RGB {
  '_pb_init_pins'
  '[display:neoPixelSetPin]' _pb_pin_RGB_LED false
  '[display:neoPixelSend]' 0
}


module 'RFID (RC522)' Input
author MicroBlocks
version 1 3 
description 'Support for RC522 RFID card with I2C and SPI interfaces.
Based on José Garcia RC522 MicroBlocks library which itself was based on:
        https://github.com/m5stack/UIFlow-Code/blob/master/units/_rfid.py
        and Arduino SPI Library: https://github.com/miguelbalboa/rfid/

Tested with:
        https://www.microcenter.com/product/639731/inland-ks0067-rc522-rfid-module-for-arduino
        https://techatronic.com/rfid-rc522-module-rfid-sensor-working-description/
        https://shop.m5stack.com/products/rfid-unit-2-ws1850s
        https://shop.m5stack.com/products/rfid-sensor-unit
'
variables _rc522_mode _rc522_i2cAddr _rc522_initialized _rc522_nssPin 

  spec ' ' 'rc522_initialize_I2C' 'RC522 initialize I2C addr _' 'num' 40
  spec ' ' 'rc522_initialize_SPI' 'RC522 initialize SPI ssPin _' 'num' 17
  spec 'r' 'rc522_connected' 'RC522 is connected'
  spec 'r' 'rc522_card_present' 'RC522 is card present'
  spec 'r' 'rc522_read_uid' 'RC522 card UID'
  spec 'r' 'rc522_equal_ids' 'RC522 _ = _' 'auto auto' 'uid1' 'uid2'
  spec ' ' '_rc522_antenna_on' '_rc522_antenna_on'
  spec 'r' '_rc522_request' '_rc522_request'
  spec 'r' '_rc522_send_to_card' '_rc522_send_to_card _ _' 'auto auto' 0 'list'
  spec ' ' '_rc522_bitset' '_rc522_bitset reg _ mask _' 'num num' 0 128
  spec ' ' '_rc522_bitclear' '_rc522_bitclear reg _ mask _' 'num num' 0 128
  spec 'r' '_rc522_read_reg' '_rc522_read_reg _' 'num' 55
  spec ' ' '_rc522_write_reg' '_rc522_write_reg _ value _' 'num num' 1 15

to '_rc522_antenna_on' {
  local 'value' ('_rc522_read_reg' (hexToInt '14'))
  if ((value & 3) != 3) {
    '_rc522_write_reg' (hexToInt '14') (value | 3)
  }
}

to '_rc522_bitclear' reg mask {
  '_rc522_write_reg' reg (('_rc522_read_reg' reg) & ('~' mask))
}

to '_rc522_bitset' reg mask {
  '_rc522_write_reg' reg (('_rc522_read_reg' reg) | mask)
}

to '_rc522_read_reg' reg {
  local 'result' 0
  if ('SPI' == _rc522_mode) {
    digitalWriteOp _rc522_nssPin false
    spiSend (128 | (reg << 1))
    result = (spiRecv)
    digitalWriteOp _rc522_nssPin true
  } ('I2C' == _rc522_mode) {
    result = (i2cGet _rc522_i2cAddr reg)
  }
  return result
}

to '_rc522_request' {
  '_rc522_write_reg' (hexToInt '0D') 7
  return ('_rc522_send_to_card' (hexToInt '0C') ('[data:makeList]' (hexToInt '26')))
}

to '_rc522_send_to_card' cmd send {
  '_rc522_write_reg' 2 ((hexToInt '77') | (hexToInt '80'))
  '_rc522_bitclear' (hexToInt '04') (hexToInt '80')
  '_rc522_bitset' (hexToInt '0A') (hexToInt '80')
  for i (size send) {
    '_rc522_write_reg' 9 (at i send)
  }
  '_rc522_write_reg' 1 cmd
  '_rc522_bitset' (hexToInt '0D') (hexToInt '80')
  waitMillis 10
  '_rc522_bitclear' (hexToInt '0D') (hexToInt '80')
  local 'response' (newList 1)
  atPut 1 response (('_rc522_read_reg' 6) & (hexToInt '1B'))
  if ((at 1 response) == 0) {
    local 'n' ('_rc522_read_reg' (hexToInt '0A'))
    for i n {
      '[data:addLast]' ('_rc522_read_reg' 9) response
    }
  }
  return response
}

to '_rc522_write_reg' reg value {
  if ('SPI' == _rc522_mode) {
    digitalWriteOp _rc522_nssPin false
    spiSend (reg << 1)
    spiSend value
    digitalWriteOp _rc522_nssPin true
  } ('I2C' == _rc522_mode) {
    i2cSet _rc522_i2cAddr reg value
  }
}

to rc522_card_present {
  local 'res' ('_rc522_request')
  if ((at 1 res) == 0) {
    if ((size res) == 3) {
      return (booleanConstant true)
    } else {
      waitMillis 5
      res = ('_rc522_request')
      return ((size res) == 3)
    }
  } else {
    return (booleanConstant false)
  }
}

to rc522_connected {
  local 'version' ('_rc522_read_reg' (hexToInt '37'))
  return (('[data:find]' version ('[data:makeList]' 21 136 144 145 146)) > 0)
}

to rc522_equal_ids id1 id2 {
  if (or (id1 == 0) (id2 == 0)) {return (booleanConstant false)}
  if ((size id1) != (size id2)) {return (booleanConstant false)}
  for i (size id1) {
    if ((at i id1) != (at i id2)) {return (booleanConstant false)}
  }
  return (booleanConstant true)
}

to rc522_initialize_I2C i2cAddr {
  _rc522_mode = 'I2C'
  _rc522_i2cAddr = i2cAddr
  if (_rc522_initialized == 0) {
    _rc522_initialized = (booleanConstant true)
    '_rc522_write_reg' 1 (hexToInt 'F')
    waitMillis 50
    '_rc522_write_reg' (hexToInt '2A') (hexToInt '80')
    '_rc522_write_reg' (hexToInt '2B') (hexToInt 'A9')
    '_rc522_write_reg' (hexToInt '2C') (hexToInt '03')
    '_rc522_write_reg' (hexToInt '2D') (hexToInt 'E8')
    '_rc522_write_reg' (hexToInt '15') (hexToInt '40')
    '_rc522_write_reg' (hexToInt '11') (hexToInt '3D')
    '_rc522_antenna_on'
  }
}

to rc522_initialize_SPI ssPin {
  _rc522_mode = 'SPI'
  _rc522_nssPin = ssPin
  if (_rc522_initialized == 0) {
    _rc522_initialized = (booleanConstant true)
    '_rc522_write_reg' 1 (hexToInt 'F')
    waitMillis 1
    '_rc522_write_reg' (hexToInt '2A') (hexToInt '80')
    '_rc522_write_reg' (hexToInt '2B') (hexToInt 'A9')
    '_rc522_write_reg' (hexToInt '2C') (hexToInt '03')
    '_rc522_write_reg' (hexToInt '2D') (hexToInt 'E8')
    '_rc522_write_reg' (hexToInt '15') (hexToInt '40')
    '_rc522_write_reg' (hexToInt '11') (hexToInt '3D')
    '_rc522_antenna_on'
  }
}

to rc522_read_uid {
  if (rc522_card_present) {
    '_rc522_write_reg' (hexToInt '0D') 0
    local 'res' ('_rc522_send_to_card' (hexToInt '0C') ('[data:makeList]' (hexToInt '93') (hexToInt '20')))
    '[data:delete]' 1 res
    '[data:delete]' 'last' res
    return res
  } else {
    return ('[data:makeList]')
  }
}


module Servo Output
author MicroBlocks
version 1 1 
tags servo motor angle rotation position 
description 'Control both positional (angle) and rotational servo motors.'
variables _servoPin _servoPulseWidth 

  spec ' ' 'setServoAngle' 'set servo _ to _ degrees (-90 to 90)' 'num num' 1 90
  spec ' ' 'setServoSpeed' 'set servo _ to speed _ (-100 to 100)' 'num num' 1 100
  spec ' ' 'stopServo' 'stop servo _' 'num' 1
  spec 'r' '_servoIndex' '_servoIndex _' 'num' 1
  spec ' ' '_servoPulse' '_servoPulse pin _ usecs _' 'num num' 1 1500
  spec ' ' '_servoUpdateLoop' '_servoUpdateLoop'

to '_servoIndex' which {
  if (_servoPin == 0) {
    _servoPin = ('[data:makeList]')
    _servoPulseWidth = ('[data:makeList]')
    sendBroadcast '_servoUpdateLoop'
  }
  local 'i' ('[data:find]' which _servoPin)
  if (i < 0) {
    comment 'Add new pin'
    '[data:addLast]' which _servoPin
    '[data:addLast]' '1500' _servoPulseWidth
    i = (size _servoPin)
  }
  return i
}

to '_servoPulse' pin usecs {
  if (usecs == 0) {
    comment 'Servo stopped; do nothing'
    return 0
  }
  usecs = (maximum 850 (minimum usecs 2150))
  comment 'Split wait into a long wait followed by a wait of <= 30 usecs for greater accuracy'
  local 'endTime' ((microsOp) + usecs)
  digitalWriteOp pin true
  waitMicros (usecs - 30)
  waitMicros (endTime - (microsOp))
  digitalWriteOp pin false
}

to '_servoUpdateLoop' {
  forever {
    if (_servoPin != 0) {
      comment 'If the _servoPin list is not 0, update the servos'
      for i (size _servoPin) {
        local 'pin' (at i _servoPin)
        local 'usecs' (at i _servoPulseWidth)
        if (and (pin >= 0) (usecs != 0)) {
          '_servoPulse' pin usecs
        }
      }
      waitMillis 15
    }
  }
}

to setServoAngle which degrees optionalReverse {
  local 'reversed' false
  if ((pushArgCount) > 2) {
    reversed = optionalReverse
  }
  if reversed {
    degrees = (0 - degrees)
  }
  local 'pulseWidth' (1500 - (10 * degrees))
  if ('[io:hasServo]') {
    '[io:setServo]' which pulseWidth
  } else {
    atPut ('_servoIndex' which) _servoPulseWidth pulseWidth
  }
}

to setServoSpeed which speed optionalReverse {
  local 'reversed' false
  if ((pushArgCount) > 2) {
    reversed = optionalReverse
  }
  if reversed {
    speed = (0 - speed)
  }
  local 'pulseWidth' (1500 - (10 * speed))
  if ((absoluteValue speed) < 2) {
    pulseWidth = 0
  }
  if ('[io:hasServo]') {
    '[io:setServo]' which pulseWidth
  } else {
    atPut ('_servoIndex' which) _servoPulseWidth pulseWidth
  }
}

to stopServo which {
  if ('[io:hasServo]') {
    '[io:setServo]' which 0
  } else {
    atPut ('_servoIndex' which) _servoPulseWidth 0
  }
}


module 'Temperature Humidity (DHT11, DHT22)' Input
author MicroBlocks
version 1 2 
tags sensor dht11 dht22 temperature humidity 
description 'Support for the DHT11 and DHT22 environmental sensors. These sensors provide temperature and humidity readings.'
variables _dht_temperature _dht_humidity _dhtData _dhtLastReadTime 

  spec 'r' 'temperature_DHT11' 'temperature (Celsius) DHT11 pin _' 'auto' 4
  spec 'r' 'humidity_DHT11' 'humidity DHT11 pin _' 'auto' 4
  spec 'r' 'temperature_DHT22' 'temperature (Celsius) DHT22 pin _' 'auto' 4
  spec 'r' 'humidity_DHT22' 'humidity DHT22 pin _' 'auto' 4
  spec ' ' '_dhtReadData' '_dhtReadData pin _' 'auto any' 4
  spec 'r' '_dhtChecksumOkay' '_dhtChecksumOkay' 'any'
  spec ' ' '_dhtUpdate' '_dhtUpdate _ isDHT11 _' 'auto bool any' 4 true
  spec 'r' '_dhtReady' '_dhtReady' 'any'

to '_dhtChecksumOkay' {
  if (not (isType _dhtData 'list')) {return (booleanConstant false)}
  local 'checksum' 0
  for i 4 {
    checksum += (at i _dhtData)
  }
  checksum = (checksum & 255)
  return (checksum == (at 5 _dhtData))
}

to '_dhtReadData' pin {
  comment 'Create DHT data array the first time'
  if (_dhtData == 0) {
    _dhtData = (newList 5)
  }
  comment 'fill with 1''s set checksum will be bad if read fails'
  atPut 'all' _dhtData 1
  comment 'Pull pin low for >18msec to request data'
  digitalWriteOp pin false
  waitMillis 20
  local 'useDHTPrimitive' (booleanConstant true)
  if useDHTPrimitive {
    result = ('[sensors:readDHT]' pin)
    if ((booleanConstant false) != result) {
      _dhtData = result
    }
    return 0
  }
  comment 'Read DHT start pulses (H L H L)'
  waitUntil (digitalReadOp pin)
  waitUntil (not (digitalReadOp pin))
  waitUntil (digitalReadOp pin)
  waitUntil (not (digitalReadOp pin))
  local 'i' 1
  local 'byte' 0
  local 'bit' 1
  comment 'Read 40 bits (5 bytes)'
  repeat 40 {
    waitUntil (digitalReadOp pin)
    local 'start' (microsOp)
    waitUntil (not (digitalReadOp pin))
    if (((microsOp) - start) > 40) {
      comment 'Long pulse - append a "1" bit'
      byte += 1
    }
    if (bit == 8) {
      atPut i _dhtData byte
      i += 1
      byte = 0
      bit = 1
    } else {
      byte = (byte << 1)
      bit += 1
    }
    waitUntil (not (digitalReadOp pin))
  }
}

to '_dhtReady' {
  local 'elapsed' ((millisOp) - _dhtLastReadTime)
  return (or (elapsed < 0) (elapsed > 2000))
}

to '_dhtUpdate' pin isDHT11 {
  if ('_dhtReady') {
    _dht_temperature = 0
    _dht_humidity = 0
    '_dhtReadData' pin
    _dhtLastReadTime = (millisOp)
  }
  if ('_dhtChecksumOkay') {
    if isDHT11 {
      _dht_temperature = (at 3 _dhtData)
      _dht_humidity = (at 1 _dhtData)
    } else {
      local 'n' (((at 1 _dhtData) * 256) + (at 2 _dhtData))
      _dht_humidity = ((n + 5) / 10)
      n = ((((at 3 _dhtData) & 127) * 256) + (at 4 _dhtData))
      if (((at 3 _dhtData) & 128) != 0) {
        n = (0 - n)
      }
      _dht_temperature = ((n + 5) / 10)
    }
  }
}

to humidity_DHT11 pin {
  '_dhtUpdate' pin true
  return _dht_humidity
}

to humidity_DHT22 pin {
  '_dhtUpdate' pin false
  return _dht_humidity
}

to temperature_DHT11 pin {
  '_dhtUpdate' pin true
  return _dht_temperature
}

to temperature_DHT22 pin {
  '_dhtUpdate' pin false
  return _dht_temperature
}

